{
  "contact_info": {
    "first_name": "Snehashish Reddy",
    "last_name": "Manda",
    "phone": "9196722226",
    "email": "srmanda.cs@gmail.com",
    "location": "Chapel Hill, NC",
    "linkedin_url": "https://linkedin.com/in/srmanda-cs",
    "github_url": "https://github.com/srmanda-cs",
    "portfolio_url": "https://srmanda.com"
  },
  "education": [
    {
      "institution": "UNC Chapel Hill",
      "degree": "Master of Science in Computer Science (GPA: 4.0/4.0)",
      "start_date": "2024-08",
      "graduation_date": "2026-05"
    },
    {
      "institution": "Amrita Vishwa Vidyapeetham",
      "degree": "Bachelor of Technology in Computer Science (GPA: 8.86/10.0)",
      "start_date": "2020-10",
      "graduation_date": "2024-06"
    }
  ],
  "work_experience": [
    {
      "job_title": "Software Development Engineer (Platform)",
      "company": "UNC Chapel Hill",
      "location": "Chapel Hill, NC",
      "start_date": "2025-08",
      "end_date": "Present",
      "bullet_points": [
        "Spearheaded the creation of a Python-based autograding platform to automate participation tracking for 240 students across two course sections, addressing a highly inefficient and manual process.",
        "Engineered a robust student name-matching algorithm using Sentence-Transformers (NLP) and statistical analysis to reconcile inconsistent PollEv data with official Canvas rosters, achieving high-accuracy matches.",
        "Architected an atomic grade-update process using Pandas that prevented data corruption by only modifying empty fields, ensuring data integrity across thousands of weekly grade entries.",
        "Developed and implemented business logic to automatically award credit based on participation thresholds (e.g., >50% of polls answered), standardizing the grading policy.",
        "Championed and integrated Jira and Trello into the 10-person instructional team's workflow, replacing a monolithic document, reducing excessive meetings, and saving an estimated 8-9 hours of logistical overhead weekly.",
        "Designed and deployed standardized, decision-optimized grading rubrics for written assignments, slashing the grading time per assignment from ~6 minutes to just 30 seconds.",
        "The combined automation and process optimization initiatives reduced the total weekly workload for the instructional team from a required 20 hours to just 8 hours, a 60% reduction in time commitment.",
        "Ensured system resilience by implementing version control for the automation scripts and establishing automated backups for the Canvas gradebook, safeguarding against data loss.",
        "Successfully piloted the tool, which led to its adoption by an additional university course and positioned it for a potential university-wide deployment as a serverless AWS Lambda function."
      ]
    },
    {
      "job_title": "Software Development Engineer (Internal Systems)",
      "company": "Tally",
      "location": "Bengaluru, KA, IN",
      "start_date": "2024-01",
      "end_date": "2024-05",
      "bullet_points": [
        "Led a 3-engineer team to develop a Proof-of-Concept (PoC) for a modern Performance Management System (PMS) to replace a 24-year-old legacy platform that was causing high employee turnover.",
        "Architected the PMS PoC as a Microsoft Teams application using React, Fluent UI, and a Node.js/Flask backend, ensuring seamless integration with the existing MySQL database for data compatibility.",
        "The PoC's success in demonstrating a transparent, feedback-driven workflow directly convinced senior management to approve a ₹7 Cr (~$1M) budget for a full-scale production system.",
        "Solely engineered a critical internal security portal using Next.js to automate IT asset management and employee offboarding, addressing a major security vulnerability.",
        "Designed and implemented a system that integrated Azure AD Graph and on-premise MySQL data to create a unified, real-time dashboard of all company-issued devices for HR and IT admins.",
        "Developed a key automation that instantly revoked network access (via MAC address) for devices of offboarded or on-leave employees, completely eliminating the security risk of unauthorized access.",
        "Transformed the complex, multi-step manual employee offboarding process into a single-click action for HR, dramatically reducing administrative overhead and the potential for human error.",
        "The asset management portal is estimated to save the company ₹27 lakh (~$40,000) annually by preventing asset loss (~₹15 lakh) and reducing operational overhead (~₹12 lakh)."
      ]
    },
    {
      "job_title": "Software Development Engineer (Financial Systems)",
      "company": "Vivriti Capital",
      "location": "Chennai, KA, IN",
      "start_date": "2023-07",
      "end_date": "2023-08",
      "bullet_points": [
        "Initiated and led an engineering team to develop an automated data extraction pipeline for unstructured, 1000+ page PDF credit reports, reducing the loan analysis lifecycle from over 3 months to less than one day.",
        "Architected a scalable, event-driven system using AWS S3, Lambda, and a Spring Boot orchestrator to manage the ingestion and processing of financial documents, solving the company's primary operational bottleneck.",
        "Designed a novel parallel processing strategy, deploying distinct Python Lambda functions with custom PDFPlumber logic for each report section, enabling modularity and rapid, targeted data extraction.",
        "Structured and indexed the extracted financial data into OpenSearch, building a searchable repository that eliminated months of manual data entry for dozens of associates.",
        "Developed a verification portal that allowed employees to validate extracted data against the source PDF, ensuring 100% data integrity while simultaneously creating a high-quality, human-verified dataset for future ML model training.",
        "Delivered a fully functional prototype in 2 months, proving the problem was solvable with current technology despite skepticism from senior leadership, which led to the full productionization of the system.",
        "My pivotal role and the project's massive success in transforming the business's core workflow resulted in a Pre-Placement Offer (PPO) for a full-time role."
      ]
    }
  ],
  "projects": [
    {
      "project_name": "Jobbernaut",
      "technologies": [
        "Python",
        "OpenAI API",
        "Jinja2",
        "LaTeX",
        "Pydantic",
        "YAML",
        "CLI"
      ],
      "project_url": "https://jobbernaut.srmanda.com/",
      "bullet_points": [
        "Conceived and single-handedly developed Jobbernaut, an AI-powered CLI tool that automates the generation of tailored resumes and cover letters, reducing application creation time from over 30 minutes to just 30 seconds.",
        "Engineered a novel 12-step generation pipeline that grounds an LLM with a master resume JSON, intelligently selects relevant experiences, and rewrites them for a specific job description to eliminate hallucinations and ensure relevance.",
        "Implemented a system using Jinja and LaTeX to produce highly optimized (<30 KiB), ATS-native PDFs, achieving perfect, zero-correction parsing on major platforms like Workday.",
        "Developed a crucial verification step where an LLM cross-references the generated content against the source data to guarantee factual accuracy and content integrity before final output.",
        "The tool proved so effective in generating 'Must Interview' tier application materials that its public release was revoked due to ethical considerations and its potential to disrupt the job application market."
      ]
    },
    {
      "project_name": "MatchWise",
      "technologies": [
        "Python",
        "PuLP",
        "FastAPI",
        "Flutter",
        "Integer Linear Programming",
        "REST API"
      ],
      "project_url": "https://github.com/orgs/yashas-hm-unc/teams/523/repositories",
      "bullet_points": [
        "Architected the core backend for MatchWise, an optimization tool that automates the assignment of ~100 graduate students to ~40 professors, reducing a 5-day manual process to under 200 milliseconds.",
        "Formulated the complex, multi-factor assignment challenge as an Integer Linear Programming (ILP) problem, implementing the solution with Python's PuLP library to find the optimal matches.",
        "Designed and implemented a custom objective function to maximize a 'best fit' probability score based on mutual professor-student rankings and shared research interests.",
        "Engineered a decoupled architecture with a FastAPI backend and a Flutter frontend, enabling independent development and ensuring rapid, scalable performance for the core matching algorithm.",
        "Successfully delivered the software as part of a client-facing project, demonstrating proficiency in translating ambiguous client requirements into a robust, high-performance technical solution."
      ]
    },
    {
      "project_name": "Cervical Cancer Detection",
      "technologies": [
        "Python",
        "DarkNet",
        "UMAP",
        "SVM",
        "Scikit-learn",
        "Image Processing",
        "ML"
      ],
      "project_url": "https://www.kaggle.com/code/ashishreddy9000/fyp-track-2-darknet-feat-ext-svm-quadri",
      "bullet_points": [
        "Co-developed a multi-stage machine learning pipeline to accelerate the diagnosis of cervical cancer from pap smear slides, designed to reduce a 12-hour manual analysis to a rapid, computer-assisted process.",
        "Engineered a pipeline specifically optimized for speed and real-world clinical application, utilizing a pre-trained DarkNet model for feature extraction, UMAP for dimensionality reduction, and an SVM for final classification.",
        "The model was intentionally biased towards high recall (favoring false positives over false negatives) to minimize the risk of missed cases, ensuring its viability as a pre-screening tool for medical specialists.",
        "Validated the approach using image augmentation on public datasets, demonstrating a potential miss rate of less than 0.02% (1-2 slides per 10,000), proving the concept's value for large-scale screening programs."
      ]
    }
  ],
  "skills": {
    "Programming Languages": "Python, JavaScript, TypeScript, Java, SQL, KQL, C++, C#",
    "Frontend Technologies": "React, Next.js, Fluent UI, HTML/CSS, Flutter, Jinja2",
    "Backend & APIs": "Node.js, Flask, FastAPI, Spring Boot, REST API, GraphQL, Microservices",
    "Cloud & DevOps": "AWS Lambda, AWS S3, Azure AD, Kubernetes, Docker, Serverless, CI/CD",
    "Databases & Storage": "MySQL, PostgreSQL, Redis, OpenSearch, MongoDB, Database Design",
    "Data & ML": "Pandas, NumPy, Scikit-learn, PyTorch, NLP, ETL, Data Pipelines, UMAP",
    "Tools & Platforms": "Git, Jira, Trello, LaTeX, Linux, Agile, Microsoft Teams",
    "Specialized Skills": "Algorithm Design, System Architecture, Performance Optimization, Security"
  }
}
